# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '95960589-1f14-43f9-bc1c-db3622204c9a'

  # Web app name
  webAppName: 'sridfg'

  # Environment name
  environmentName: 'sridfg'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'FTA sonalikaroy - Azure CXP Internal (0f629d89-46bc-474b-941a-c7140441a426)'
              appType: 'webAppLinux'
              WebAppName: 'sridfg'
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              StartupCommand: 'npm run start'
        
          - task: DownloadSecureFile@1
            inputs:
              secureFile: 'appsettings.json'
          
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'FTA sonalikaroy - Azure CXP Internal (0f629d89-46bc-474b-941a-c7140441a426)'
              scriptType: 'batch'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Install jq for JSON processing
                      sudo apt-get install -y jq
                
                      # Read the JSON file
                      appSettings=$(cat $(Agent.TempDirectory)/appsettings.json)
                
                      # Convert JSON to key-value pairs for Azure CLI
                      settings=$(echo $appSettings | jq -r 'to_entries | map("\(.key)=\(.value|tostring)") | .[]')
                
                      # Set the app settings in Azure App Service
                      az webapp config appsettings set --name sridfg --resource-group sridfg --settings $settings
          

         